// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VulnerableAPI.Database;

#nullable disable

namespace VulnerableAPI.Migrations.UserDb
{
    [DbContext(typeof(UserDbContext))]
    [Migration("20230930210910_AddMoneyRequest")]
    partial class AddMoneyRequest
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.11");

            modelBuilder.Entity("VulnerableAPI.Database.Models.Friend", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("FriendUserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("FriendUserId");

                    b.HasIndex("UserId");

                    b.ToTable("Friends");
                });

            modelBuilder.Entity("VulnerableAPI.Database.Models.Ledger", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<double>("Balance")
                        .HasColumnType("REAL");

                    b.Property<int>("Currency")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Iban")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Ledgers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("626d98ad-11d8-4173-8d43-cf258ae7f5b0"),
                            Balance = 287.0,
                            Currency = 0,
                            Iban = "LT450065400000000379",
                            UserId = new Guid("15a61231-a186-4fc9-ae24-a83d582eaa4d")
                        },
                        new
                        {
                            Id = new Guid("a6ef43da-515a-466e-9633-b1f6abfadb71"),
                            Balance = 543.0,
                            Currency = 0,
                            Iban = "LT170065400000000592",
                            UserId = new Guid("f373061d-5a04-4725-9140-243236afd26a")
                        },
                        new
                        {
                            Id = new Guid("bfd418de-e2b9-4d97-aa63-4575d3fc0c24"),
                            Balance = 115.0,
                            Currency = 0,
                            Iban = "LT090065400000000736",
                            UserId = new Guid("ff9763ee-b247-48a3-84bd-7099a54a2074")
                        },
                        new
                        {
                            Id = new Guid("ea3c9233-f231-4413-aca4-fb7207422336"),
                            Balance = 88.0,
                            Currency = 0,
                            Iban = "LT800065400000000913",
                            UserId = new Guid("fd4bd871-01e0-46fc-bbbd-8b0311659f57")
                        },
                        new
                        {
                            Id = new Guid("6d30483f-4069-41f2-ab85-0485cd947a9b"),
                            Balance = 113.0,
                            Currency = 0,
                            Iban = "LT470065400000000343",
                            UserId = new Guid("842b911c-7000-4714-b615-52a8849d569f")
                        },
                        new
                        {
                            Id = new Guid("e86bbbf9-2360-42f0-94f4-d855a331152d"),
                            Balance = 420.0,
                            Currency = 0,
                            Iban = "LT130065400000000373",
                            UserId = new Guid("a28af4ba-d62c-4a7a-8109-9ff9fac19423")
                        },
                        new
                        {
                            Id = new Guid("e44e3d5c-3d90-486a-9a8c-b2f1e220bb17"),
                            Balance = 366.0,
                            Currency = 0,
                            Iban = "LT220065400000000211",
                            UserId = new Guid("ed807edb-f6bb-4dcf-b293-72d5e4262157")
                        },
                        new
                        {
                            Id = new Guid("2fcddc87-f0f6-40b8-9ce2-d7eab47edc83"),
                            Balance = 599.0,
                            Currency = 0,
                            Iban = "LT530065400000000235",
                            UserId = new Guid("d3ece0e4-6cb7-4af6-a98b-7bb4169c8b8d")
                        },
                        new
                        {
                            Id = new Guid("f68b5dc4-3bd3-417a-8809-558e815cf864"),
                            Balance = 447.0,
                            Currency = 0,
                            Iban = "LT410065400000000354",
                            UserId = new Guid("92b23f71-e891-4616-8e62-f28c761feb25")
                        },
                        new
                        {
                            Id = new Guid("acb2755d-618d-47a0-92cf-28bf9c678f65"),
                            Balance = 7.0,
                            Currency = 0,
                            Iban = "LT540065400000000508",
                            UserId = new Guid("82f6754f-5d67-4b59-a2c1-936e1d72396d")
                        },
                        new
                        {
                            Id = new Guid("5f3a5153-4f90-47f7-ae92-41289f00fb74"),
                            Balance = 479.0,
                            Currency = 0,
                            Iban = "LT810065400000000604",
                            UserId = new Guid("fc66e5ef-d1e8-4f7d-a845-903f93a90387")
                        },
                        new
                        {
                            Id = new Guid("7491cd74-0b74-464a-b5f0-7117ab96ad2f"),
                            Balance = 308.0,
                            Currency = 0,
                            Iban = "LT880065400000000575",
                            UserId = new Guid("8adb7e81-d14a-45d7-9b5d-dfc222643029")
                        },
                        new
                        {
                            Id = new Guid("cd2d7558-6eb3-42e0-b991-b8dcaf3c1125"),
                            Balance = 622.0,
                            Currency = 0,
                            Iban = "LT730065400000000166",
                            UserId = new Guid("fcffdaad-83bb-4ba1-83e9-90caeecf147d")
                        },
                        new
                        {
                            Id = new Guid("73db071b-4db8-4073-b5b3-ca6aecccddfe"),
                            Balance = 415.0,
                            Currency = 0,
                            Iban = "LT200065400000000441",
                            UserId = new Guid("133e3479-43b7-484a-8449-0ce31bc82f4c")
                        });
                });

            modelBuilder.Entity("VulnerableAPI.Database.Models.MoneyRequest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<double>("Amount")
                        .HasColumnType("REAL");

                    b.Property<int>("Currency")
                        .HasColumnType("INTEGER");

                    b.Property<string>("RequestReason")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("RequestedById")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("RequestedFromId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("RequestedById");

                    b.HasIndex("RequestedFromId");

                    b.ToTable("MoneyRequests");
                });

            modelBuilder.Entity("VulnerableAPI.Database.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("15a61231-a186-4fc9-ae24-a83d582eaa4d"),
                            Email = "birdie.vonrueden@strosin.biz",
                            FirstName = "Devon",
                            IsAdmin = false,
                            LastName = "Jakubowski",
                            PasswordHash = "hash",
                            PasswordSalt = "salt"
                        },
                        new
                        {
                            Id = new Guid("f373061d-5a04-4725-9140-243236afd26a"),
                            Email = "wilma_raynor@doyle.us",
                            FirstName = "Charles",
                            IsAdmin = false,
                            LastName = "Lind",
                            PasswordHash = "hash",
                            PasswordSalt = "salt"
                        },
                        new
                        {
                            Id = new Guid("ff9763ee-b247-48a3-84bd-7099a54a2074"),
                            Email = "dorthy@wehner.us",
                            FirstName = "Sean",
                            IsAdmin = false,
                            LastName = "White",
                            PasswordHash = "hash",
                            PasswordSalt = "salt"
                        },
                        new
                        {
                            Id = new Guid("fd4bd871-01e0-46fc-bbbd-8b0311659f57"),
                            Email = "cooper@rice.name",
                            FirstName = "Destany",
                            IsAdmin = false,
                            LastName = "Ruecker",
                            PasswordHash = "hash",
                            PasswordSalt = "salt"
                        },
                        new
                        {
                            Id = new Guid("842b911c-7000-4714-b615-52a8849d569f"),
                            Email = "felix.corkery@donnelly.name",
                            FirstName = "Ayla",
                            IsAdmin = false,
                            LastName = "Haley",
                            PasswordHash = "hash",
                            PasswordSalt = "salt"
                        },
                        new
                        {
                            Id = new Guid("a28af4ba-d62c-4a7a-8109-9ff9fac19423"),
                            Email = "mortimer@dubuque.biz",
                            FirstName = "Felton",
                            IsAdmin = false,
                            LastName = "Lakin",
                            PasswordHash = "hash",
                            PasswordSalt = "salt"
                        },
                        new
                        {
                            Id = new Guid("ed807edb-f6bb-4dcf-b293-72d5e4262157"),
                            Email = "mackenzie@schmeler.com",
                            FirstName = "Brycen",
                            IsAdmin = false,
                            LastName = "Bahringer",
                            PasswordHash = "hash",
                            PasswordSalt = "salt"
                        },
                        new
                        {
                            Id = new Guid("d3ece0e4-6cb7-4af6-a98b-7bb4169c8b8d"),
                            Email = "maryam_brakus@cremin.info",
                            FirstName = "Chloe",
                            IsAdmin = false,
                            LastName = "Carter",
                            PasswordHash = "hash",
                            PasswordSalt = "salt"
                        },
                        new
                        {
                            Id = new Guid("92b23f71-e891-4616-8e62-f28c761feb25"),
                            Email = "lupe@kunzebayer.biz",
                            FirstName = "Robyn",
                            IsAdmin = false,
                            LastName = "Bogan",
                            PasswordHash = "hash",
                            PasswordSalt = "salt"
                        },
                        new
                        {
                            Id = new Guid("82f6754f-5d67-4b59-a2c1-936e1d72396d"),
                            Email = "casandra@marvin.co.uk",
                            FirstName = "Keshawn",
                            IsAdmin = false,
                            LastName = "Kilback",
                            PasswordHash = "hash",
                            PasswordSalt = "salt"
                        },
                        new
                        {
                            Id = new Guid("fc66e5ef-d1e8-4f7d-a845-903f93a90387"),
                            Email = "brielle@schneidershanahan.com",
                            FirstName = "Melvina",
                            IsAdmin = false,
                            LastName = "Walker",
                            PasswordHash = "hash",
                            PasswordSalt = "salt"
                        },
                        new
                        {
                            Id = new Guid("8adb7e81-d14a-45d7-9b5d-dfc222643029"),
                            Email = "ashtyn_graham@kunde.uk",
                            FirstName = "Virginia",
                            IsAdmin = false,
                            LastName = "McCullough",
                            PasswordHash = "hash",
                            PasswordSalt = "salt"
                        },
                        new
                        {
                            Id = new Guid("fcffdaad-83bb-4ba1-83e9-90caeecf147d"),
                            Email = "keara.sporer@greenholt.uk",
                            FirstName = "Dixie",
                            IsAdmin = false,
                            LastName = "Braun",
                            PasswordHash = "hash",
                            PasswordSalt = "salt"
                        },
                        new
                        {
                            Id = new Guid("133e3479-43b7-484a-8449-0ce31bc82f4c"),
                            Email = "trenton@dickinson.name",
                            FirstName = "Glenna",
                            IsAdmin = false,
                            LastName = "Satterfield",
                            PasswordHash = "hash",
                            PasswordSalt = "salt"
                        });
                });

            modelBuilder.Entity("VulnerableAPI.Database.Models.Friend", b =>
                {
                    b.HasOne("VulnerableAPI.Database.Models.User", "FriendUser")
                        .WithMany()
                        .HasForeignKey("FriendUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VulnerableAPI.Database.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FriendUser");

                    b.Navigation("User");
                });

            modelBuilder.Entity("VulnerableAPI.Database.Models.Ledger", b =>
                {
                    b.HasOne("VulnerableAPI.Database.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("VulnerableAPI.Database.Models.MoneyRequest", b =>
                {
                    b.HasOne("VulnerableAPI.Database.Models.User", "RequestedBy")
                        .WithMany()
                        .HasForeignKey("RequestedById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VulnerableAPI.Database.Models.User", "RequestedFrom")
                        .WithMany()
                        .HasForeignKey("RequestedFromId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RequestedBy");

                    b.Navigation("RequestedFrom");
                });
#pragma warning restore 612, 618
        }
    }
}
